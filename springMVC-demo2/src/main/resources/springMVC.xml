<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd">


    <!--扫描组件-->
    <context:component-scan base-package="com.atguigu"></context:component-scan>

    <!-- 配置Thymeleaf视图解析器 -->
    <bean id="viewResolver" class="org.thymeleaf.spring5.view.ThymeleafViewResolver">
        <property name="order" value="1"/>
        <property name="characterEncoding" value="UTF-8"/>
        <property name="templateEngine">
            <bean class="org.thymeleaf.spring5.SpringTemplateEngine">
                <property name="templateResolver">
                    <bean class="org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver">
                        <!-- 视图前缀 -->
                        <property name="prefix" value="/WEB-INF/templates/"/>
                        <!-- 视图后缀 -->
                        <property name="suffix" value=".html"/>
                        <property name="templateMode" value="HTML5"/>
                        <property name="characterEncoding" value="UTF-8" />
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <!--配置视图控制器-->
    <mvc:view-controller path="/" view-name="index"></mvc:view-controller>
    <!--开启mvc注解驱动 - 防止因首页跳转功能而导致控制器中其他方法失效-->
    <mvc:annotation-driven/>

    <!--开放对静态资源的访问 - 防止SpringMVC处理静态资源时找不到资源-->
    <!--若SpringMVC前端控制器处理时找不到该资源,则会交给默认的servlet来处理-->
    <mvc:default-servlet-handler/>


    <!--配置文件上传解析器，将上传的的文件封装为MultipartFile-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"></bean>

    <!--配置拦截器-->
    <mvc:interceptors>
        <!--bean表示其中的对象为一个拦截器，且所有的Controller都会被它拦截，ref同理，且需要将该拦截器交由IOC容器管理-->
        <!--<bean class="xxx"></bean>-->
        <!--<ref bean=""></ref>-->
        <mvc:interceptor>
            <!--拦截的对应映射-->
            <mvc:mapping path="/*"/>   <!--此处的/*表示上下文路径下的一层目录，/**表示拦截所有-->
            <!--排除的映射-->
            <mvc:exclude-mapping path="/"/>
            <ref bean="firstInterceptor"></ref>
        </mvc:interceptor>
    </mvc:interceptors>
    <!--
        以上配置方式可以通过ref或bean标签设置拦截器，通过mvc:mapping设置需要拦截的请求，通过
        mvc:exclude-mapping设置需要排除的请求，即不需要拦截的请求
    -->


    <!--配置异常映射-->
    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <!--
            properties的键表示处理器方法执行过程中出现的异常
            properties的值表示若出现指定异常时，设置一个新的视图名称，跳转到指定页面
        -->
        <property name="exceptionMappings">
            <props>
                <prop key="java.lang.ArithmeticException">error</prop>
            </props>
        </property>
        <!--设置将异常信息共享在请求域中的键，ex为exceptiongAttribute的键的name，value为错误信息-->
        <property name="exceptionAttribute" value="ex"></property>
    </bean>




</beans>